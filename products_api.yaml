swagger: '2.0'
info:
  version: '0.1'
  title: DRAFT - Products API
  description: DRAFT - Products API
  contact: 
   email: johnny@beezup.com
   url: Point BeezUP on Teams
   name: Johnny KNOBLAUCH


tags:
- name: Products
  description: Product management


paths: 

  '/merchant/products/v1/{storeId}/publications/{publicationId}/start':
    post:
      tags:
        - Products
      summary: Start the product publication
      description: | 
        This operation will inform BeezUP that the publication has been started by the merchant.
                
        The reasons BeezUP asks you to declare first want you do before doing it:
        1. Improve the quality of the reporting
        2. Improve the efficiency of the diagnostic in case of issue
        3. Improve the communication between you and our support
        4. BeezUP will adapt the processing to give you the best performance possible
        5. Ensure that we have only one publication at the time to avoid any risk
      parameters:
        - $ref: '#/parameters/storeIdInPath'
        - $ref: '#/parameters/publicationIdInPath'
        - name: request
          in: body
          required:  true
          schema:
            $ref: '#/definitions/startProductPublicationRequest'
      responses:
        202:
          $ref: '#/responses/202_Accepted'
        400:
          $ref: '#/responses/400_Request_Invalid'
        404:
          $ref: '#/responses/404_Store_NotFound'
        409:
          $ref: '#/responses/409_Publication_Already_Exists'
        default:
          $ref: "#/responses/GeneralError"


  '/merchant/products/v1/{storeId}/publications/{publicationId}/messages':
    post:
      tags:
        - Products
      summary: Push product messages
      parameters:
        - $ref: '#/parameters/storeIdInPath'
        - $ref: '#/parameters/publicationIdInPath'
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/pushProductsRequest'
      responses:
        202:
          $ref: '#/responses/202_Accepted'
        400:
          $ref: '#/responses/400_Request_Invalid'
        404:
          $ref: '#/responses/404_Publication_NotFound'
        409:
          $ref: '#/responses/409_Publication_Already_Completed'
        default:
          $ref: "#/responses/GeneralError"

  '/merchant/products/v1/{storeId}/publications/{publicationId}/complete':
    post:
      tags:
        - Products
      summary: Complete the publication
      description: This operation will inform BeezUP that the publication has been completed by the merchant
      parameters:
        - $ref: '#/parameters/storeIdInPath'
        - $ref: '#/parameters/publicationIdInPath'
      responses:
        202:
          $ref: '#/responses/202_Accepted'
        404:
          $ref: '#/responses/404_Publication_NotFound'
        409:
          $ref: '#/responses/409_Publication_Already_Completed'
        default:
          $ref: "#/responses/GeneralError"

responses:

  202_Accepted:
    description: Request accepted

  400_Request_Invalid:
    description: The request is invalid
    schema:
      $ref: "#/definitions/errorResponseMessage"

  404_Store_NotFound:
    description: The store is not found
    schema:
      $ref: "#/definitions/errorResponseMessage"

  404_Publication_NotFound:
    description: The publication id is not found
    schema:
      $ref: "#/definitions/errorResponseMessage"
  409_Publication_Already_Completed:
    description: The publication id is already completed
    schema:
      $ref: "#/definitions/errorResponseMessage"
  409_Publication_Already_Exists:
    description: The publication id  already exists
    schema:
      $ref: "#/definitions/errorResponseMessage"

  GeneralError:
    description: Occurs when something goes wrong
    schema:
      $ref: "#/definitions/errorResponseMessage"


parameters:

  storeIdInPath:
    name: storeId
    in: path
    required: true
    type: string
    format: StoreId


  productActionTypeInPath:
    name: productActionType
    in: path
    required: true
    type: string
    format: ProductActionType

  publicationIdInPath:
    name: publicationId
    in: path
    required: true
    type: string
    format: PublicationId

definitions:
  docUrl:
    x-exclude: true
    type: string
    format: string
    description: The documentation related to this operation.
    example: https://api-docs.beezup.com/#operation/EnableChannelCatalog

  userErrorMessage:
    type: object
    x-exclude: true
    required:
    - code
    - message
    properties:
      docUrl:
        $ref: "#/definitions/docUrl"
      code:
        type: string
        description: the error code. The error code can be a pattern containing the
          argument's name
        example: CatalogImportationAlreadyInProgress(ExecutionId currentCatalogImportationId)
      message:
        type: string
        description: The error message
        example: 'There is already an importation in progress: b24d0dd8-a561-478a-9b26-34f573f03527'

  errorResponseMessage:
    x-exclude: true
    type: object
    required:
    - errors
    properties:
      errors:
        type: array
        uniqueItems: false
        minLength: 1
        items:
          $ref: "#/definitions/userErrorMessage"


  pushProductsRequest:
    type: object
    required:
      - messages
    properties: 
      messages:
        type: array
        minItems: 1
        maxItems: 1000
        uniqueItems: true
        items:
          $ref: '#/definitions/product'


  startProductPublicationRequest:
    type: object
    required:
      - actionType
    properties: 
      actionType:
        $ref: '#/definitions/productGlobalActionType'


  product:
    type: object
    description: The product size must not be bigger than 2MB
    required: 
    - sku
    - action
    properties:
      sku:
        $ref: '#/definitions/sku'
      properties:
        type: array
        minItems: 1
        maxItems: 1000
        items:
          $ref: '#/definitions/productProperty'

  productProperty:
    type: object
    required:
      - name
    properties: 
      name:
        $ref: '#/definitions/productPropertyName'
      value:
        $ref: '#/definitions/productPropertyValue'


  productPropertyName:
    type: string
    description: Product property name
    maxLength: 250

  productPropertyValue:
    type: string
    description: Product property value
    maxLength: 1000000

  publicationId:
    type: string
    format: uuid


  sku:
    type: string
    maxLength: 250
    description: The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers. http://schema.org/sku

  productGlobalActionType:
    type: string
    description: |
      Values:
      - REPLACE: Add or replace the existing product. If there is any custom column already declared on the catalog, the custom columns computation will be applied on the fly based on the product properties provided in the message
      - MERGE: Update the product properties of the existing product.
              You cannot remove a product property using this action type, you must using REPLACE action type for that. 
              If there is any custom column already declared on the catalog, the custom columns computation will be applied on the fly based on the product properties provided in the message if it's possible or asynchronously.
      - DELETE: Simply delete the product
    enum:
    - REPLACE
    - MERGE
    - DELETE
