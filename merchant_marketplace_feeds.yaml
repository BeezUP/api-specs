swagger: '2.0'
info:
  version: '0.1'
  title: DRAFT - Merchant Marketplace Feeds API
  description: DRAFT - Merchant Marketplace Feeds API
  contact: 
   email: johnny@beezup.com
   url: Point BeezUP on Teams
   name: Johnny KNOBLAUCH


tags:
- name: Feeds
  description: Feed management


paths: 

  '/merchant/marketplace/feeds/v1/{marketplaceTechnicalCode}/{accountId}/publications/{publicationId}/start':
    post:
      tags:
        - Feeds
      summary: Start the publication
      description: | 
        This operation will inform BeezUP that the publication has been started by the merchant.
        We will be able to control if there is already a publication in progress or not to avoid any risk.
      parameters:
        - $ref: '#/parameters/marketplaceTechnicalCodeInPath'
        - $ref: '#/parameters/marketplaceAccountIdInPath'
        - $ref: '#/parameters/feedTypeInPath'
        - $ref: '#/parameters/publicationIdInPath'
        - name: request
          in: body
          required:  true
          schema:
            $ref: '#/definitions/startFeedPublicationRequest'
      responses:
        202:
          $ref: '#/responses/202_Accepted'
        400:
          $ref: '#/responses/400_Request_Invalid'
        404:
          $ref: '#/responses/404_Account_NotFound'
        409:
          $ref: '#/responses/409_Publication_Already_Exists'
        default:
          $ref: "#/responses/GeneralError"


  '/merchant/marketplace/feeds/v1/{marketplaceTechnicalCode}/{accountId}/publications/{publicationId}/messages':
    post:
      tags:
        - Feeds
      summary: Push feed messages
      parameters:
        - $ref: '#/parameters/marketplaceTechnicalCodeInPath'
        - $ref: '#/parameters/marketplaceAccountIdInPath'
        - $ref: '#/parameters/publicationIdInPath'
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/pushFeedsRequest'
      responses:
        202:
          $ref: '#/responses/202_Accepted'
        400:
          $ref: '#/responses/400_Request_Invalid'
        404:
          $ref: '#/responses/404_Publication_NotFound'
        409:
          $ref: '#/responses/409_Publication_Already_Completed'
        default:
          $ref: "#/responses/GeneralError"

  '/merchant/marketplace/feeds/v1/{marketplaceTechnicalCode}/{accountId}/publications/{publicationId}/complete':
    post:
      tags:
        - Feeds
      summary: Complete the publication
      description: This operation will inform BeezUP that the publication has been completed by the merchant to allow BeezUP to start the publication now to the marketplace
      parameters:
        - $ref: '#/parameters/marketplaceTechnicalCodeInPath'
        - $ref: '#/parameters/marketplaceAccountIdInPath'
        - $ref: '#/parameters/publicationIdInPath'
      responses:
        202:
          $ref: '#/responses/202_Accepted'
        404:
          $ref: '#/responses/404_Publication_NotFound'
        409:
          $ref: '#/responses/409_Publication_Already_Completed'
        default:
          $ref: "#/responses/GeneralError"

responses:

  202_Accepted:
    description: Request accepted

  400_Request_Invalid:
    description: The request is invalid
    schema:
      $ref: "#/definitions/errorResponseMessage"

  404_Account_NotFound:
    description: The Marketplace technical code or the Account Id is not found
    schema:
      $ref: "#/definitions/errorResponseMessage"

  404_Publication_NotFound:
    description: The combination of MarketplaceTechnicalCode, AccountId and publication id is not found
    schema:
      $ref: "#/definitions/errorResponseMessage"
  409_Publication_Already_Completed:
    description: The publication id is already completed
    schema:
      $ref: "#/definitions/errorResponseMessage"
  409_Publication_Already_Exists:
    description: The publication id  already exists
    schema:
      $ref: "#/definitions/errorResponseMessage"
  400_MBC_Or_Request_Invalid:
    description: The marketplace technical code is invalid or the request is invalid
    schema:
      $ref: "#/definitions/errorResponseMessage"
  GeneralError:
    description: Occurs when something goes wrong
    schema:
      $ref: "#/definitions/errorResponseMessage"
parameters:

  marketplaceTechnicalCodeInPath:
    name: marketplaceTechnicalCode
    in: path
    required: true
    type: string
    format: MarketplaceTechnicalCode

  marketplaceAccountIdInPath:
    name: accountId
    in: path
    required: true
    type: integer
    format: MarketplaceAccountId

  feedTypeInPath:
    name: feedType
    in: path
    required: true
    type: string
    format: FeedType

  publicationIdInPath:
    name: publicationId
    in: path
    required: true
    type: string
    format: PublicationId

definitions:
  docUrl:
    x-exclude: true
    type: string
    format: string
    description: The documentation related to this operation.
    example: https://api-docs.beezup.com/#operation/EnableChannelCatalog

  userErrorMessage:
    type: object
    x-exclude: true
    required:
    - code
    - message
    properties:
      docUrl:
        $ref: "#/definitions/docUrl"
      code:
        type: string
        description: the error code. The error code can be a pattern containing the
          argument's name
        example: CatalogImportationAlreadyInProgress(ExecutionId currentCatalogImportationId)
      message:
        type: string
        description: The error message
        example: 'There is already an importation in progress: b24d0dd8-a561-478a-9b26-34f573f03527'

  errorResponseMessage:
    x-exclude: true
    type: object
    required:
    - errors
    properties:
      errors:
        type: array
        uniqueItems: false
        minLength: 1
        items:
          $ref: "#/definitions/userErrorMessage"


  pushFeedsRequest:
    type: object
    required:
      - messages
    properties: 
      messages:
        type: array
        minItems: 1
        maxItems: 1000
        uniqueItems: true
        items:
          $ref: '#/definitions/feed'


  startFeedPublicationRequest:
    type: object
    required:
      - feedType
    properties: 
      feedType:
        $ref: '#/definitions/feedType'


  marketplaceTechnicalCode:
    type: string

  marketplaceAccountId:
    type: integer


  feed:
    type: object
    required: 
    - sku
    - action
    properties:
      sku:
        $ref: '#/definitions/sku'
      action:
        $ref: '#/definitions/actionType'
      properties:
        type: array
        items:
          $ref: '#/definitions/feedProperty'

  feedProperty:
    type: object
    required:
      - key
    properties: 
      key:
        type: string
      value:
        type: string


  publicationId:
    type: string
    format: uuid


  sku:
    type: string
    maxLength: 50
    description: The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers. http://schema.org/sku

  feedType:
    type: string
    enum:
    - PRODUCT
    - OFFER
    - PRODUCTANDOFFER

  actionType:
    type: string
    enum:
    - PUBLISH
    - UNPUBLISH
